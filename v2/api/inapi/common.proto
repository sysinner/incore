// Copyright 2015 Eryx <evorui аt gmаil dοt cοm>, All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package inapi;

option optimize_for = LITE_RUNTIME;
option go_package = "./;inapi";

// Common_Meta is metadata that all persisted resources must have, which includes
// all objects users must create. A resource may have only one of {Common_Meta,
// ListMeta}.
message Common_Meta {
  // ID is the unique in time and space value for this object. It is typically
  // generated by the server on successful creation of a resource and is not
  // allowed to change on PUT operations.
  string id = 1;

  // Name is unique within a namespace.  Name is required when creating
  // resources, although some resources may allow a client to request the
  // generation of an appropriate name automatically. Name is primarily intended
  // for creation idempotence and configuration definition.
  string name = 2;

  // User defines the username or userid.
  string user = 3;

  // An opaque value that represents the version of this resource. May be used
  // for optimistic concurrency, change detection, and the watch operation on a
  // resource or set of resources. Clients must treat these values as opaque and
  // values may only be valid for a particular resource or set of resources.
  // Only servers will generate resource versions.
  string version = 4;

  // Human readable title of this object.
  string title = 5;

  // Human readable subtitle of this object.
  string subtitle = 6;

  // Created or Updated is a timestamp representing the server time when this
  // object was created or updated. It is not guaranteed to be set in
  // happens-before order across separate operations. Clients may not set this
  // value. It is represented in RFC3339 form and is in UTC.
  int64 created = 14;
  int64 updated = 15;
}

message Common_Option {
  string name = 1;
  string value = 2;
}
