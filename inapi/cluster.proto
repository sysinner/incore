// Copyright 2015 Eryx <evorui аt gmаil dοt cοm>, All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package inapi;

option go_package = "./;inapi";

import "inapi.proto";
import "config.proto";
import "pod.proto";
import "stats.proto";

// volume
message ResVolValue {
  string name = 1;  // struct:object_slice_key
  int32 value = 2;  // GB
  uint32 attrs = 3;
}

message ResVolBound {
  string ref_id = 1;
  string ref_name = 2;
  string mnt = 4;
  int32 size = 5;
  uint32 attrs = 6;
}

// image
message ResImageService {
  string driver = 1;
  string url = 2;  // struct:object_slice_key
}

// host
message ResHostOperate {
  uint32 action = 1;
  string cell_id = 2;
  string zone_id = 3;
  int32 cpu_used = 4;  // 10m
  int64 mem_used = 5;  // MB
  repeated ResVolValue vol_used = 6;
  repeated uint32 port_used = 7;
  int32 box_num = 8;
  uint32 pr = 9;  // Priority
  string network_vpc_bridge = 10;
  string network_vpc_instance = 11;
  repeated string groups = 12;
  string secret_key = 13;
}

message ResHostCloudProvider {
  string instance_id = 1;
  string instance_name = 2;
  string private_ip = 3;
  string raw_json = 15;
}

message ResHost {
  ObjectMeta meta = 1;
  ResHostOperate operate = 2;
  ResHostSpec spec = 3;
  ResHostStatus status = 4;
  repeated PbPodRepStatus prs = 5;
  uint64 network_map_version = 6;
  ResHostCloudProvider cloud_provider = 7;
}

message ResHostNew {
  string name = 1;
  uint32 action = 2;
  string zone_id = 3;
  string cell_id = 4;
  string peer_lan_addr = 5;
  string secret_key = 6;
  repeated string zone_masters = 7;
  string zone_iam_service_url = 8;
  string zone_inpack_service_url = 9;
}

message ResHostCloudProviderSyncEntry {
  string instance_id = 1;
  string instance_name = 2;
  ResHostCloudProvider cloud_provider = 7;
  uint64 action = 8;
  string zone_id = 9;
}

message ResHostList {
  repeated ResHost items = 2;
}

message ResHostSpec {
  ResPlatform platform = 2;
  ResHostResource capacity = 3;
  uint32 http_port = 5;
  string peer_lan_addr = 6;
  string peer_wan_addr = 7;
  string exp_docker_version = 10;
  string exp_rkt_version = 11;
  string exp_pouch_version = 12;
}

message ResPlatform {
  string os = 1;
  string kernel = 2;
  string arch = 3;
}

message ResHostResource {
  int64 mem = 1;
  int32 cpu = 2;
  repeated ResVolValue vols = 3;
}

message ResHostVolume {
  string name = 1;
  uint64 total = 2;
  uint64 used = 3;
}

message ResHostStatus {
  string phase = 1;
  uint32 uptime = 2;
  repeated ResHostVolume volumes = 3;
  PbStatsSampleFeed stats = 4;
  uint32 updated = 5;
}

message ResHostBound {
  ResZoneMasterList masters = 2;
  repeated string exp_pods = 5;
  string zone_inpack_service_url = 7;
  repeated string exp_box_removes = 8;
  repeated string exp_box_stops = 9;
  repeated ResImageService image_services = 10;
  string network_domain_name = 11;
  string network_vpc_bridge = 12;
  string network_vpc_instance = 13;
  ZoneNetworkMap zone_network_map = 14;
}

message ResZone {
  ObjectMeta meta = 2;
  uint32 phase = 3;
  string summary = 4;
  repeated string wan_addrs = 5;
  repeated string lan_addrs = 6;
  repeated ResCell cells = 7;
  repeated Label options = 8;
  string wan_api = 9;
  repeated ResImageService image_services = 10;
  string network_domain_name = 11;
  string network_vpc_bridge = 12;
  string network_vpc_instance = 13;
  ConfigInstance driver = 14;
  repeated ZoneGroupSpec groups = 15;
}

message ResCell {
  ObjectMeta meta = 2;
  string zone_id = 3;
  uint32 phase = 4;
  string description = 5;
  int32 node_num = 6;
  ResCellStatus status = 7;
}

message ResCellStatus {
  string id = 1;
  uint32 updated = 2;
  int64 cpu_cap = 5;
  int64 cpu_used = 6;
  int64 mem_cap = 7;
  int64 mem_used = 8;
  int32 host_cap = 10;
  int32 host_in = 11;
  int32 vol_cap = 12;
  int32 vol_used = 13;
}

message ZoneGroupSpec {
  string id = 1;
  string name = 2;
  string description = 3;
  uint64 action = 4;
}

message ResZoneMasterNode {
  string id = 1;
  string addr = 2;
  uint32 action = 3;
}

message ResZoneMasterList {
  uint64 version = 1;
  string leader = 2;
  uint64 updated = 3;
  repeated ResZoneMasterNode items = 4;
}

message ZoneHostConfigRequest {
  uint64 action = 2;
  string id = 3;
  string cell_id = 4;
  string lan_addr = 5;
  string secret_key = 6;
}

message ZoneHostConfigReply {
  string zone_id = 3;
  string cell_id = 4;
  repeated string zone_main_nodes = 5;
}

message ZoneNetworkMapInstance {
  string id = 1;
  uint32 rep_cap = 2;
}

message ZoneNetworkMap {
  uint64 update_version = 2;
  bytes vpc_route_data = 3;
  map<uint32, string> vpc_instance_data = 4;
}

message ServiceReply {
  string kind = 1;
}

service ApiHostMember {
  rpc HostJoin(ResHostNew) returns (ResHost) {}
}

service ApiZoneMaster {
  rpc HostConfig(ZoneHostConfigRequest) returns (ZoneHostConfigReply) {}
  rpc HostStatusSync(ResHost) returns (ResHostBound) {}
}
