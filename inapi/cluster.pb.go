// Copyright 2015 Eryx <evorui аt gmаil dοt cοm>, All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v6.32.1
// source: cluster.proto

package inapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// volume
type ResVolValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty"`    // struct:object_slice_key
	Value int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty" toml:"value,omitempty"` // GB
	Attrs uint32 `protobuf:"varint,3,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty"`
}

func (x *ResVolValue) Reset() {
	*x = ResVolValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResVolValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResVolValue) ProtoMessage() {}

func (x *ResVolValue) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResVolValue.ProtoReflect.Descriptor instead.
func (*ResVolValue) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *ResVolValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResVolValue) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *ResVolValue) GetAttrs() uint32 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

type ResVolBound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefId   string `protobuf:"bytes,1,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty" toml:"ref_id,omitempty"`
	RefName string `protobuf:"bytes,2,opt,name=ref_name,json=refName,proto3" json:"ref_name,omitempty" toml:"ref_name,omitempty"`
	Mnt     string `protobuf:"bytes,4,opt,name=mnt,proto3" json:"mnt,omitempty" toml:"mnt,omitempty"`
	Size    int32  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty" toml:"size,omitempty"`
	Attrs   uint32 `protobuf:"varint,6,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty"`
}

func (x *ResVolBound) Reset() {
	*x = ResVolBound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResVolBound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResVolBound) ProtoMessage() {}

func (x *ResVolBound) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResVolBound.ProtoReflect.Descriptor instead.
func (*ResVolBound) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *ResVolBound) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

func (x *ResVolBound) GetRefName() string {
	if x != nil {
		return x.RefName
	}
	return ""
}

func (x *ResVolBound) GetMnt() string {
	if x != nil {
		return x.Mnt
	}
	return ""
}

func (x *ResVolBound) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ResVolBound) GetAttrs() uint32 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

// image
type ResImageService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver string `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty" toml:"driver,omitempty"`
	Url    string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty" toml:"url,omitempty"` // struct:object_slice_key
}

func (x *ResImageService) Reset() {
	*x = ResImageService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResImageService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResImageService) ProtoMessage() {}

func (x *ResImageService) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResImageService.ProtoReflect.Descriptor instead.
func (*ResImageService) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *ResImageService) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *ResImageService) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// host
type ResHostOperate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action             uint32         `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty"`
	CellId             string         `protobuf:"bytes,2,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty" toml:"cell_id,omitempty"`
	ZoneId             string         `protobuf:"bytes,3,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty" toml:"zone_id,omitempty"`
	CpuUsed            int32          `protobuf:"varint,4,opt,name=cpu_used,json=cpuUsed,proto3" json:"cpu_used,omitempty" toml:"cpu_used,omitempty"` // 10m
	MemUsed            int64          `protobuf:"varint,5,opt,name=mem_used,json=memUsed,proto3" json:"mem_used,omitempty" toml:"mem_used,omitempty"` // MB
	VolUsed            []*ResVolValue `protobuf:"bytes,6,rep,name=vol_used,json=volUsed,proto3" json:"vol_used,omitempty" toml:"vol_used,omitempty"`
	PortUsed           []uint32       `protobuf:"varint,7,rep,packed,name=port_used,json=portUsed,proto3" json:"port_used,omitempty" toml:"port_used,omitempty"`
	BoxNum             int32          `protobuf:"varint,8,opt,name=box_num,json=boxNum,proto3" json:"box_num,omitempty" toml:"box_num,omitempty"`
	Pr                 uint32         `protobuf:"varint,9,opt,name=pr,proto3" json:"pr,omitempty" toml:"pr,omitempty"` // Priority
	NetworkVpcBridge   string         `protobuf:"bytes,10,opt,name=network_vpc_bridge,json=networkVpcBridge,proto3" json:"network_vpc_bridge,omitempty" toml:"network_vpc_bridge,omitempty"`
	NetworkVpcInstance string         `protobuf:"bytes,11,opt,name=network_vpc_instance,json=networkVpcInstance,proto3" json:"network_vpc_instance,omitempty" toml:"network_vpc_instance,omitempty"`
	Groups             []string       `protobuf:"bytes,12,rep,name=groups,proto3" json:"groups,omitempty" toml:"groups,omitempty"`
	SecretKey          string         `protobuf:"bytes,13,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty" toml:"secret_key,omitempty"`
}

func (x *ResHostOperate) Reset() {
	*x = ResHostOperate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHostOperate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHostOperate) ProtoMessage() {}

func (x *ResHostOperate) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHostOperate.ProtoReflect.Descriptor instead.
func (*ResHostOperate) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *ResHostOperate) GetAction() uint32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *ResHostOperate) GetCellId() string {
	if x != nil {
		return x.CellId
	}
	return ""
}

func (x *ResHostOperate) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *ResHostOperate) GetCpuUsed() int32 {
	if x != nil {
		return x.CpuUsed
	}
	return 0
}

func (x *ResHostOperate) GetMemUsed() int64 {
	if x != nil {
		return x.MemUsed
	}
	return 0
}

func (x *ResHostOperate) GetVolUsed() []*ResVolValue {
	if x != nil {
		return x.VolUsed
	}
	return nil
}

func (x *ResHostOperate) GetPortUsed() []uint32 {
	if x != nil {
		return x.PortUsed
	}
	return nil
}

func (x *ResHostOperate) GetBoxNum() int32 {
	if x != nil {
		return x.BoxNum
	}
	return 0
}

func (x *ResHostOperate) GetPr() uint32 {
	if x != nil {
		return x.Pr
	}
	return 0
}

func (x *ResHostOperate) GetNetworkVpcBridge() string {
	if x != nil {
		return x.NetworkVpcBridge
	}
	return ""
}

func (x *ResHostOperate) GetNetworkVpcInstance() string {
	if x != nil {
		return x.NetworkVpcInstance
	}
	return ""
}

func (x *ResHostOperate) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ResHostOperate) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type ResHostCloudProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId   string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty" toml:"instance_id,omitempty"`
	InstanceName string `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty"`
	PrivateIp    string `protobuf:"bytes,3,opt,name=private_ip,json=privateIp,proto3" json:"private_ip,omitempty" toml:"private_ip,omitempty"`
	RawJson      string `protobuf:"bytes,15,opt,name=raw_json,json=rawJson,proto3" json:"raw_json,omitempty" toml:"raw_json,omitempty"`
}

func (x *ResHostCloudProvider) Reset() {
	*x = ResHostCloudProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHostCloudProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHostCloudProvider) ProtoMessage() {}

func (x *ResHostCloudProvider) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHostCloudProvider.ProtoReflect.Descriptor instead.
func (*ResHostCloudProvider) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *ResHostCloudProvider) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ResHostCloudProvider) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *ResHostCloudProvider) GetPrivateIp() string {
	if x != nil {
		return x.PrivateIp
	}
	return ""
}

func (x *ResHostCloudProvider) GetRawJson() string {
	if x != nil {
		return x.RawJson
	}
	return ""
}

type ResHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta              *ObjectMeta           `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty" toml:"meta,omitempty"`
	Operate           *ResHostOperate       `protobuf:"bytes,2,opt,name=operate,proto3" json:"operate,omitempty" toml:"operate,omitempty"`
	Spec              *ResHostSpec          `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty" toml:"spec,omitempty"`
	Status            *ResHostStatus        `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty"`
	Prs               []*PbPodRepStatus     `protobuf:"bytes,5,rep,name=prs,proto3" json:"prs,omitempty" toml:"prs,omitempty"`
	NetworkMapVersion uint64                `protobuf:"varint,6,opt,name=network_map_version,json=networkMapVersion,proto3" json:"network_map_version,omitempty" toml:"network_map_version,omitempty"`
	CloudProvider     *ResHostCloudProvider `protobuf:"bytes,7,opt,name=cloud_provider,json=cloudProvider,proto3" json:"cloud_provider,omitempty" toml:"cloud_provider,omitempty"`
}

func (x *ResHost) Reset() {
	*x = ResHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHost) ProtoMessage() {}

func (x *ResHost) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHost.ProtoReflect.Descriptor instead.
func (*ResHost) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *ResHost) GetMeta() *ObjectMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ResHost) GetOperate() *ResHostOperate {
	if x != nil {
		return x.Operate
	}
	return nil
}

func (x *ResHost) GetSpec() *ResHostSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ResHost) GetStatus() *ResHostStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ResHost) GetPrs() []*PbPodRepStatus {
	if x != nil {
		return x.Prs
	}
	return nil
}

func (x *ResHost) GetNetworkMapVersion() uint64 {
	if x != nil {
		return x.NetworkMapVersion
	}
	return 0
}

func (x *ResHost) GetCloudProvider() *ResHostCloudProvider {
	if x != nil {
		return x.CloudProvider
	}
	return nil
}

type ResHostNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty"`
	Action               uint32   `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty"`
	ZoneId               string   `protobuf:"bytes,3,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty" toml:"zone_id,omitempty"`
	CellId               string   `protobuf:"bytes,4,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty" toml:"cell_id,omitempty"`
	PeerLanAddr          string   `protobuf:"bytes,5,opt,name=peer_lan_addr,json=peerLanAddr,proto3" json:"peer_lan_addr,omitempty" toml:"peer_lan_addr,omitempty"`
	SecretKey            string   `protobuf:"bytes,6,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty" toml:"secret_key,omitempty"`
	ZoneMasters          []string `protobuf:"bytes,7,rep,name=zone_masters,json=zoneMasters,proto3" json:"zone_masters,omitempty" toml:"zone_masters,omitempty"`
	ZoneIamServiceUrl    string   `protobuf:"bytes,8,opt,name=zone_iam_service_url,json=zoneIamServiceUrl,proto3" json:"zone_iam_service_url,omitempty" toml:"zone_iam_service_url,omitempty"`
	ZoneInpackServiceUrl string   `protobuf:"bytes,9,opt,name=zone_inpack_service_url,json=zoneInpackServiceUrl,proto3" json:"zone_inpack_service_url,omitempty" toml:"zone_inpack_service_url,omitempty"`
}

func (x *ResHostNew) Reset() {
	*x = ResHostNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHostNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHostNew) ProtoMessage() {}

func (x *ResHostNew) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHostNew.ProtoReflect.Descriptor instead.
func (*ResHostNew) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *ResHostNew) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResHostNew) GetAction() uint32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *ResHostNew) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *ResHostNew) GetCellId() string {
	if x != nil {
		return x.CellId
	}
	return ""
}

func (x *ResHostNew) GetPeerLanAddr() string {
	if x != nil {
		return x.PeerLanAddr
	}
	return ""
}

func (x *ResHostNew) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *ResHostNew) GetZoneMasters() []string {
	if x != nil {
		return x.ZoneMasters
	}
	return nil
}

func (x *ResHostNew) GetZoneIamServiceUrl() string {
	if x != nil {
		return x.ZoneIamServiceUrl
	}
	return ""
}

func (x *ResHostNew) GetZoneInpackServiceUrl() string {
	if x != nil {
		return x.ZoneInpackServiceUrl
	}
	return ""
}

type ResHostCloudProviderSyncEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId    string                `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty" toml:"instance_id,omitempty"`
	InstanceName  string                `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty"`
	CloudProvider *ResHostCloudProvider `protobuf:"bytes,7,opt,name=cloud_provider,json=cloudProvider,proto3" json:"cloud_provider,omitempty" toml:"cloud_provider,omitempty"`
	Action        uint64                `protobuf:"varint,8,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty"`
	ZoneId        string                `protobuf:"bytes,9,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty" toml:"zone_id,omitempty"`
}

func (x *ResHostCloudProviderSyncEntry) Reset() {
	*x = ResHostCloudProviderSyncEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHostCloudProviderSyncEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHostCloudProviderSyncEntry) ProtoMessage() {}

func (x *ResHostCloudProviderSyncEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHostCloudProviderSyncEntry.ProtoReflect.Descriptor instead.
func (*ResHostCloudProviderSyncEntry) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *ResHostCloudProviderSyncEntry) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ResHostCloudProviderSyncEntry) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *ResHostCloudProviderSyncEntry) GetCloudProvider() *ResHostCloudProvider {
	if x != nil {
		return x.CloudProvider
	}
	return nil
}

func (x *ResHostCloudProviderSyncEntry) GetAction() uint64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *ResHostCloudProviderSyncEntry) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

type ResHostList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ResHost `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty"`
}

func (x *ResHostList) Reset() {
	*x = ResHostList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHostList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHostList) ProtoMessage() {}

func (x *ResHostList) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHostList.ProtoReflect.Descriptor instead.
func (*ResHostList) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{8}
}

func (x *ResHostList) GetItems() []*ResHost {
	if x != nil {
		return x.Items
	}
	return nil
}

type ResHostSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform         *ResPlatform     `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty" toml:"platform,omitempty"`
	Capacity         *ResHostResource `protobuf:"bytes,3,opt,name=capacity,proto3" json:"capacity,omitempty" toml:"capacity,omitempty"`
	HttpPort         uint32           `protobuf:"varint,5,opt,name=http_port,json=httpPort,proto3" json:"http_port,omitempty" toml:"http_port,omitempty"`
	PeerLanAddr      string           `protobuf:"bytes,6,opt,name=peer_lan_addr,json=peerLanAddr,proto3" json:"peer_lan_addr,omitempty" toml:"peer_lan_addr,omitempty"`
	PeerWanAddr      string           `protobuf:"bytes,7,opt,name=peer_wan_addr,json=peerWanAddr,proto3" json:"peer_wan_addr,omitempty" toml:"peer_wan_addr,omitempty"`
	ExpDockerVersion string           `protobuf:"bytes,10,opt,name=exp_docker_version,json=expDockerVersion,proto3" json:"exp_docker_version,omitempty" toml:"exp_docker_version,omitempty"`
	ExpRktVersion    string           `protobuf:"bytes,11,opt,name=exp_rkt_version,json=expRktVersion,proto3" json:"exp_rkt_version,omitempty" toml:"exp_rkt_version,omitempty"`
	ExpPouchVersion  string           `protobuf:"bytes,12,opt,name=exp_pouch_version,json=expPouchVersion,proto3" json:"exp_pouch_version,omitempty" toml:"exp_pouch_version,omitempty"`
}

func (x *ResHostSpec) Reset() {
	*x = ResHostSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHostSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHostSpec) ProtoMessage() {}

func (x *ResHostSpec) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHostSpec.ProtoReflect.Descriptor instead.
func (*ResHostSpec) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{9}
}

func (x *ResHostSpec) GetPlatform() *ResPlatform {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *ResHostSpec) GetCapacity() *ResHostResource {
	if x != nil {
		return x.Capacity
	}
	return nil
}

func (x *ResHostSpec) GetHttpPort() uint32 {
	if x != nil {
		return x.HttpPort
	}
	return 0
}

func (x *ResHostSpec) GetPeerLanAddr() string {
	if x != nil {
		return x.PeerLanAddr
	}
	return ""
}

func (x *ResHostSpec) GetPeerWanAddr() string {
	if x != nil {
		return x.PeerWanAddr
	}
	return ""
}

func (x *ResHostSpec) GetExpDockerVersion() string {
	if x != nil {
		return x.ExpDockerVersion
	}
	return ""
}

func (x *ResHostSpec) GetExpRktVersion() string {
	if x != nil {
		return x.ExpRktVersion
	}
	return ""
}

func (x *ResHostSpec) GetExpPouchVersion() string {
	if x != nil {
		return x.ExpPouchVersion
	}
	return ""
}

type ResPlatform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Os     string `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty" toml:"os,omitempty"`
	Kernel string `protobuf:"bytes,2,opt,name=kernel,proto3" json:"kernel,omitempty" toml:"kernel,omitempty"`
	Arch   string `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty" toml:"arch,omitempty"`
}

func (x *ResPlatform) Reset() {
	*x = ResPlatform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResPlatform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPlatform) ProtoMessage() {}

func (x *ResPlatform) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPlatform.ProtoReflect.Descriptor instead.
func (*ResPlatform) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{10}
}

func (x *ResPlatform) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ResPlatform) GetKernel() string {
	if x != nil {
		return x.Kernel
	}
	return ""
}

func (x *ResPlatform) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

type ResHostResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mem  int64          `protobuf:"varint,1,opt,name=mem,proto3" json:"mem,omitempty" toml:"mem,omitempty"`
	Cpu  int32          `protobuf:"varint,2,opt,name=cpu,proto3" json:"cpu,omitempty" toml:"cpu,omitempty"`
	Vols []*ResVolValue `protobuf:"bytes,3,rep,name=vols,proto3" json:"vols,omitempty" toml:"vols,omitempty"`
}

func (x *ResHostResource) Reset() {
	*x = ResHostResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHostResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHostResource) ProtoMessage() {}

func (x *ResHostResource) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHostResource.ProtoReflect.Descriptor instead.
func (*ResHostResource) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{11}
}

func (x *ResHostResource) GetMem() int64 {
	if x != nil {
		return x.Mem
	}
	return 0
}

func (x *ResHostResource) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ResHostResource) GetVols() []*ResVolValue {
	if x != nil {
		return x.Vols
	}
	return nil
}

type ResHostVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty"`
	Total uint64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty" toml:"total,omitempty"`
	Used  uint64 `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty" toml:"used,omitempty"`
}

func (x *ResHostVolume) Reset() {
	*x = ResHostVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHostVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHostVolume) ProtoMessage() {}

func (x *ResHostVolume) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHostVolume.ProtoReflect.Descriptor instead.
func (*ResHostVolume) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{12}
}

func (x *ResHostVolume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResHostVolume) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResHostVolume) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

type ResHostStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phase   string             `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty" toml:"phase,omitempty"`
	Uptime  uint32             `protobuf:"varint,2,opt,name=uptime,proto3" json:"uptime,omitempty" toml:"uptime,omitempty"`
	Volumes []*ResHostVolume   `protobuf:"bytes,3,rep,name=volumes,proto3" json:"volumes,omitempty" toml:"volumes,omitempty"`
	Stats   *PbStatsSampleFeed `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty" toml:"stats,omitempty"`
	Updated uint32             `protobuf:"varint,5,opt,name=updated,proto3" json:"updated,omitempty" toml:"updated,omitempty"`
}

func (x *ResHostStatus) Reset() {
	*x = ResHostStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHostStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHostStatus) ProtoMessage() {}

func (x *ResHostStatus) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHostStatus.ProtoReflect.Descriptor instead.
func (*ResHostStatus) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{13}
}

func (x *ResHostStatus) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *ResHostStatus) GetUptime() uint32 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *ResHostStatus) GetVolumes() []*ResHostVolume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *ResHostStatus) GetStats() *PbStatsSampleFeed {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ResHostStatus) GetUpdated() uint32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type ResHostBound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Masters              *ResZoneMasterList `protobuf:"bytes,2,opt,name=masters,proto3" json:"masters,omitempty" toml:"masters,omitempty"`
	ExpPods              []string           `protobuf:"bytes,5,rep,name=exp_pods,json=expPods,proto3" json:"exp_pods,omitempty" toml:"exp_pods,omitempty"`
	ZoneInpackServiceUrl string             `protobuf:"bytes,7,opt,name=zone_inpack_service_url,json=zoneInpackServiceUrl,proto3" json:"zone_inpack_service_url,omitempty" toml:"zone_inpack_service_url,omitempty"`
	ExpBoxRemoves        []string           `protobuf:"bytes,8,rep,name=exp_box_removes,json=expBoxRemoves,proto3" json:"exp_box_removes,omitempty" toml:"exp_box_removes,omitempty"`
	ExpBoxStops          []string           `protobuf:"bytes,9,rep,name=exp_box_stops,json=expBoxStops,proto3" json:"exp_box_stops,omitempty" toml:"exp_box_stops,omitempty"`
	ImageServices        []*ResImageService `protobuf:"bytes,10,rep,name=image_services,json=imageServices,proto3" json:"image_services,omitempty" toml:"image_services,omitempty"`
	NetworkDomainName    string             `protobuf:"bytes,11,opt,name=network_domain_name,json=networkDomainName,proto3" json:"network_domain_name,omitempty" toml:"network_domain_name,omitempty"`
	NetworkVpcBridge     string             `protobuf:"bytes,12,opt,name=network_vpc_bridge,json=networkVpcBridge,proto3" json:"network_vpc_bridge,omitempty" toml:"network_vpc_bridge,omitempty"`
	NetworkVpcInstance   string             `protobuf:"bytes,13,opt,name=network_vpc_instance,json=networkVpcInstance,proto3" json:"network_vpc_instance,omitempty" toml:"network_vpc_instance,omitempty"`
	ZoneNetworkMap       *ZoneNetworkMap    `protobuf:"bytes,14,opt,name=zone_network_map,json=zoneNetworkMap,proto3" json:"zone_network_map,omitempty" toml:"zone_network_map,omitempty"`
}

func (x *ResHostBound) Reset() {
	*x = ResHostBound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHostBound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHostBound) ProtoMessage() {}

func (x *ResHostBound) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHostBound.ProtoReflect.Descriptor instead.
func (*ResHostBound) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{14}
}

func (x *ResHostBound) GetMasters() *ResZoneMasterList {
	if x != nil {
		return x.Masters
	}
	return nil
}

func (x *ResHostBound) GetExpPods() []string {
	if x != nil {
		return x.ExpPods
	}
	return nil
}

func (x *ResHostBound) GetZoneInpackServiceUrl() string {
	if x != nil {
		return x.ZoneInpackServiceUrl
	}
	return ""
}

func (x *ResHostBound) GetExpBoxRemoves() []string {
	if x != nil {
		return x.ExpBoxRemoves
	}
	return nil
}

func (x *ResHostBound) GetExpBoxStops() []string {
	if x != nil {
		return x.ExpBoxStops
	}
	return nil
}

func (x *ResHostBound) GetImageServices() []*ResImageService {
	if x != nil {
		return x.ImageServices
	}
	return nil
}

func (x *ResHostBound) GetNetworkDomainName() string {
	if x != nil {
		return x.NetworkDomainName
	}
	return ""
}

func (x *ResHostBound) GetNetworkVpcBridge() string {
	if x != nil {
		return x.NetworkVpcBridge
	}
	return ""
}

func (x *ResHostBound) GetNetworkVpcInstance() string {
	if x != nil {
		return x.NetworkVpcInstance
	}
	return ""
}

func (x *ResHostBound) GetZoneNetworkMap() *ZoneNetworkMap {
	if x != nil {
		return x.ZoneNetworkMap
	}
	return nil
}

type ResZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta               *ObjectMeta        `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty" toml:"meta,omitempty"`
	Phase              uint32             `protobuf:"varint,3,opt,name=phase,proto3" json:"phase,omitempty" toml:"phase,omitempty"`
	Summary            string             `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty" toml:"summary,omitempty"`
	WanAddrs           []string           `protobuf:"bytes,5,rep,name=wan_addrs,json=wanAddrs,proto3" json:"wan_addrs,omitempty" toml:"wan_addrs,omitempty"`
	LanAddrs           []string           `protobuf:"bytes,6,rep,name=lan_addrs,json=lanAddrs,proto3" json:"lan_addrs,omitempty" toml:"lan_addrs,omitempty"`
	Cells              []*ResCell         `protobuf:"bytes,7,rep,name=cells,proto3" json:"cells,omitempty" toml:"cells,omitempty"`
	Options            []*Label           `protobuf:"bytes,8,rep,name=options,proto3" json:"options,omitempty" toml:"options,omitempty"`
	WanApi             string             `protobuf:"bytes,9,opt,name=wan_api,json=wanApi,proto3" json:"wan_api,omitempty" toml:"wan_api,omitempty"`
	ImageServices      []*ResImageService `protobuf:"bytes,10,rep,name=image_services,json=imageServices,proto3" json:"image_services,omitempty" toml:"image_services,omitempty"`
	NetworkDomainName  string             `protobuf:"bytes,11,opt,name=network_domain_name,json=networkDomainName,proto3" json:"network_domain_name,omitempty" toml:"network_domain_name,omitempty"`
	NetworkVpcBridge   string             `protobuf:"bytes,12,opt,name=network_vpc_bridge,json=networkVpcBridge,proto3" json:"network_vpc_bridge,omitempty" toml:"network_vpc_bridge,omitempty"`
	NetworkVpcInstance string             `protobuf:"bytes,13,opt,name=network_vpc_instance,json=networkVpcInstance,proto3" json:"network_vpc_instance,omitempty" toml:"network_vpc_instance,omitempty"`
	Driver             *ConfigInstance    `protobuf:"bytes,14,opt,name=driver,proto3" json:"driver,omitempty" toml:"driver,omitempty"`
	Groups             []*ZoneGroupSpec   `protobuf:"bytes,15,rep,name=groups,proto3" json:"groups,omitempty" toml:"groups,omitempty"`
}

func (x *ResZone) Reset() {
	*x = ResZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResZone) ProtoMessage() {}

func (x *ResZone) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResZone.ProtoReflect.Descriptor instead.
func (*ResZone) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{15}
}

func (x *ResZone) GetMeta() *ObjectMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ResZone) GetPhase() uint32 {
	if x != nil {
		return x.Phase
	}
	return 0
}

func (x *ResZone) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ResZone) GetWanAddrs() []string {
	if x != nil {
		return x.WanAddrs
	}
	return nil
}

func (x *ResZone) GetLanAddrs() []string {
	if x != nil {
		return x.LanAddrs
	}
	return nil
}

func (x *ResZone) GetCells() []*ResCell {
	if x != nil {
		return x.Cells
	}
	return nil
}

func (x *ResZone) GetOptions() []*Label {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ResZone) GetWanApi() string {
	if x != nil {
		return x.WanApi
	}
	return ""
}

func (x *ResZone) GetImageServices() []*ResImageService {
	if x != nil {
		return x.ImageServices
	}
	return nil
}

func (x *ResZone) GetNetworkDomainName() string {
	if x != nil {
		return x.NetworkDomainName
	}
	return ""
}

func (x *ResZone) GetNetworkVpcBridge() string {
	if x != nil {
		return x.NetworkVpcBridge
	}
	return ""
}

func (x *ResZone) GetNetworkVpcInstance() string {
	if x != nil {
		return x.NetworkVpcInstance
	}
	return ""
}

func (x *ResZone) GetDriver() *ConfigInstance {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *ResZone) GetGroups() []*ZoneGroupSpec {
	if x != nil {
		return x.Groups
	}
	return nil
}

type ResCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta        *ObjectMeta    `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty" toml:"meta,omitempty"`
	ZoneId      string         `protobuf:"bytes,3,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty" toml:"zone_id,omitempty"`
	Phase       uint32         `protobuf:"varint,4,opt,name=phase,proto3" json:"phase,omitempty" toml:"phase,omitempty"`
	Description string         `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty" toml:"description,omitempty"`
	NodeNum     int32          `protobuf:"varint,6,opt,name=node_num,json=nodeNum,proto3" json:"node_num,omitempty" toml:"node_num,omitempty"`
	Status      *ResCellStatus `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty"`
}

func (x *ResCell) Reset() {
	*x = ResCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCell) ProtoMessage() {}

func (x *ResCell) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCell.ProtoReflect.Descriptor instead.
func (*ResCell) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{16}
}

func (x *ResCell) GetMeta() *ObjectMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ResCell) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *ResCell) GetPhase() uint32 {
	if x != nil {
		return x.Phase
	}
	return 0
}

func (x *ResCell) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ResCell) GetNodeNum() int32 {
	if x != nil {
		return x.NodeNum
	}
	return 0
}

func (x *ResCell) GetStatus() *ResCellStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ResCellStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	Updated uint32 `protobuf:"varint,2,opt,name=updated,proto3" json:"updated,omitempty" toml:"updated,omitempty"`
	CpuCap  int64  `protobuf:"varint,5,opt,name=cpu_cap,json=cpuCap,proto3" json:"cpu_cap,omitempty" toml:"cpu_cap,omitempty"`
	CpuUsed int64  `protobuf:"varint,6,opt,name=cpu_used,json=cpuUsed,proto3" json:"cpu_used,omitempty" toml:"cpu_used,omitempty"`
	MemCap  int64  `protobuf:"varint,7,opt,name=mem_cap,json=memCap,proto3" json:"mem_cap,omitempty" toml:"mem_cap,omitempty"`
	MemUsed int64  `protobuf:"varint,8,opt,name=mem_used,json=memUsed,proto3" json:"mem_used,omitempty" toml:"mem_used,omitempty"`
	HostCap int32  `protobuf:"varint,10,opt,name=host_cap,json=hostCap,proto3" json:"host_cap,omitempty" toml:"host_cap,omitempty"`
	HostIn  int32  `protobuf:"varint,11,opt,name=host_in,json=hostIn,proto3" json:"host_in,omitempty" toml:"host_in,omitempty"`
	VolCap  int32  `protobuf:"varint,12,opt,name=vol_cap,json=volCap,proto3" json:"vol_cap,omitempty" toml:"vol_cap,omitempty"`
	VolUsed int32  `protobuf:"varint,13,opt,name=vol_used,json=volUsed,proto3" json:"vol_used,omitempty" toml:"vol_used,omitempty"`
}

func (x *ResCellStatus) Reset() {
	*x = ResCellStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCellStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCellStatus) ProtoMessage() {}

func (x *ResCellStatus) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCellStatus.ProtoReflect.Descriptor instead.
func (*ResCellStatus) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{17}
}

func (x *ResCellStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResCellStatus) GetUpdated() uint32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *ResCellStatus) GetCpuCap() int64 {
	if x != nil {
		return x.CpuCap
	}
	return 0
}

func (x *ResCellStatus) GetCpuUsed() int64 {
	if x != nil {
		return x.CpuUsed
	}
	return 0
}

func (x *ResCellStatus) GetMemCap() int64 {
	if x != nil {
		return x.MemCap
	}
	return 0
}

func (x *ResCellStatus) GetMemUsed() int64 {
	if x != nil {
		return x.MemUsed
	}
	return 0
}

func (x *ResCellStatus) GetHostCap() int32 {
	if x != nil {
		return x.HostCap
	}
	return 0
}

func (x *ResCellStatus) GetHostIn() int32 {
	if x != nil {
		return x.HostIn
	}
	return 0
}

func (x *ResCellStatus) GetVolCap() int32 {
	if x != nil {
		return x.VolCap
	}
	return 0
}

func (x *ResCellStatus) GetVolUsed() int32 {
	if x != nil {
		return x.VolUsed
	}
	return 0
}

type ZoneGroupSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" toml:"description,omitempty"`
	Action      uint64 `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty"`
}

func (x *ZoneGroupSpec) Reset() {
	*x = ZoneGroupSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneGroupSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneGroupSpec) ProtoMessage() {}

func (x *ZoneGroupSpec) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneGroupSpec.ProtoReflect.Descriptor instead.
func (*ZoneGroupSpec) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{18}
}

func (x *ZoneGroupSpec) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ZoneGroupSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ZoneGroupSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ZoneGroupSpec) GetAction() uint64 {
	if x != nil {
		return x.Action
	}
	return 0
}

type ResZoneMasterNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	Addr   string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty" toml:"addr,omitempty"`
	Action uint32 `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty"`
}

func (x *ResZoneMasterNode) Reset() {
	*x = ResZoneMasterNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResZoneMasterNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResZoneMasterNode) ProtoMessage() {}

func (x *ResZoneMasterNode) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResZoneMasterNode.ProtoReflect.Descriptor instead.
func (*ResZoneMasterNode) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{19}
}

func (x *ResZoneMasterNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResZoneMasterNode) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ResZoneMasterNode) GetAction() uint32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type ResZoneMasterList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint64               `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty"`
	Leader  string               `protobuf:"bytes,2,opt,name=leader,proto3" json:"leader,omitempty" toml:"leader,omitempty"`
	Updated uint64               `protobuf:"varint,3,opt,name=updated,proto3" json:"updated,omitempty" toml:"updated,omitempty"`
	Items   []*ResZoneMasterNode `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty"`
}

func (x *ResZoneMasterList) Reset() {
	*x = ResZoneMasterList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResZoneMasterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResZoneMasterList) ProtoMessage() {}

func (x *ResZoneMasterList) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResZoneMasterList.ProtoReflect.Descriptor instead.
func (*ResZoneMasterList) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{20}
}

func (x *ResZoneMasterList) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ResZoneMasterList) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *ResZoneMasterList) GetUpdated() uint64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *ResZoneMasterList) GetItems() []*ResZoneMasterNode {
	if x != nil {
		return x.Items
	}
	return nil
}

type ZoneHostConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    uint64 `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty"`
	Id        string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	CellId    string `protobuf:"bytes,4,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty" toml:"cell_id,omitempty"`
	LanAddr   string `protobuf:"bytes,5,opt,name=lan_addr,json=lanAddr,proto3" json:"lan_addr,omitempty" toml:"lan_addr,omitempty"`
	SecretKey string `protobuf:"bytes,6,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty" toml:"secret_key,omitempty"`
}

func (x *ZoneHostConfigRequest) Reset() {
	*x = ZoneHostConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneHostConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneHostConfigRequest) ProtoMessage() {}

func (x *ZoneHostConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneHostConfigRequest.ProtoReflect.Descriptor instead.
func (*ZoneHostConfigRequest) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{21}
}

func (x *ZoneHostConfigRequest) GetAction() uint64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *ZoneHostConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ZoneHostConfigRequest) GetCellId() string {
	if x != nil {
		return x.CellId
	}
	return ""
}

func (x *ZoneHostConfigRequest) GetLanAddr() string {
	if x != nil {
		return x.LanAddr
	}
	return ""
}

func (x *ZoneHostConfigRequest) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type ZoneHostConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId        string   `protobuf:"bytes,3,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty" toml:"zone_id,omitempty"`
	CellId        string   `protobuf:"bytes,4,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty" toml:"cell_id,omitempty"`
	ZoneMainNodes []string `protobuf:"bytes,5,rep,name=zone_main_nodes,json=zoneMainNodes,proto3" json:"zone_main_nodes,omitempty" toml:"zone_main_nodes,omitempty"`
}

func (x *ZoneHostConfigReply) Reset() {
	*x = ZoneHostConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneHostConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneHostConfigReply) ProtoMessage() {}

func (x *ZoneHostConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneHostConfigReply.ProtoReflect.Descriptor instead.
func (*ZoneHostConfigReply) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{22}
}

func (x *ZoneHostConfigReply) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *ZoneHostConfigReply) GetCellId() string {
	if x != nil {
		return x.CellId
	}
	return ""
}

func (x *ZoneHostConfigReply) GetZoneMainNodes() []string {
	if x != nil {
		return x.ZoneMainNodes
	}
	return nil
}

type ZoneNetworkMapInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	RepCap uint32 `protobuf:"varint,2,opt,name=rep_cap,json=repCap,proto3" json:"rep_cap,omitempty" toml:"rep_cap,omitempty"`
}

func (x *ZoneNetworkMapInstance) Reset() {
	*x = ZoneNetworkMapInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneNetworkMapInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneNetworkMapInstance) ProtoMessage() {}

func (x *ZoneNetworkMapInstance) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneNetworkMapInstance.ProtoReflect.Descriptor instead.
func (*ZoneNetworkMapInstance) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{23}
}

func (x *ZoneNetworkMapInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ZoneNetworkMapInstance) GetRepCap() uint32 {
	if x != nil {
		return x.RepCap
	}
	return 0
}

type ZoneNetworkMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateVersion   uint64            `protobuf:"varint,2,opt,name=update_version,json=updateVersion,proto3" json:"update_version,omitempty" toml:"update_version,omitempty"`
	VpcRouteData    []byte            `protobuf:"bytes,3,opt,name=vpc_route_data,json=vpcRouteData,proto3" json:"vpc_route_data,omitempty" toml:"vpc_route_data,omitempty"`
	VpcInstanceData map[uint32]string `protobuf:"bytes,4,rep,name=vpc_instance_data,json=vpcInstanceData,proto3" json:"vpc_instance_data,omitempty" toml:"vpc_instance_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ZoneNetworkMap) Reset() {
	*x = ZoneNetworkMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneNetworkMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneNetworkMap) ProtoMessage() {}

func (x *ZoneNetworkMap) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneNetworkMap.ProtoReflect.Descriptor instead.
func (*ZoneNetworkMap) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{24}
}

func (x *ZoneNetworkMap) GetUpdateVersion() uint64 {
	if x != nil {
		return x.UpdateVersion
	}
	return 0
}

func (x *ZoneNetworkMap) GetVpcRouteData() []byte {
	if x != nil {
		return x.VpcRouteData
	}
	return nil
}

func (x *ZoneNetworkMap) GetVpcInstanceData() map[uint32]string {
	if x != nil {
		return x.VpcInstanceData
	}
	return nil
}

type ServiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty" toml:"kind,omitempty"`
}

func (x *ServiceReply) Reset() {
	*x = ServiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceReply) ProtoMessage() {}

func (x *ServiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceReply.ProtoReflect.Descriptor instead.
func (*ServiceReply) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{25}
}

func (x *ServiceReply) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

var File_cluster_proto protoreflect.FileDescriptor

var file_cluster_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x1a, 0x0b, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x09, 0x70, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x56, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x7b, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x56,
	0x6f, 0x6c, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x66, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x65, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x3b, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0x9c, 0x03, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x63, 0x70, 0x75, 0x55, 0x73, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65,
	0x6d, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65,
	0x6d, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x76, 0x6f, 0x6c, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x56, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x76, 0x6f, 0x6c,
	0x55, 0x73, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x78, 0x4e, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x70, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x70, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x56,
	0x70, 0x63, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x56,
	0x70, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0xd4, 0x02, 0x0a, 0x07, 0x52,
	0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x2f, 0x0a,
	0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x26,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x03, 0x70, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x62, 0x50, 0x6f, 0x64, 0x52,
	0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x03, 0x70, 0x72, 0x73, 0x12, 0x2e, 0x0a,
	0x13, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x73, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x22, 0xb8, 0x02, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x77,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a,
	0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x7a, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x61, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x17, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x6e,
	0x70, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x70, 0x61,
	0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xda, 0x01, 0x0a,
	0x1d, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x48, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd8,
	0x02, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2e,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x32,
	0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x6e, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x65, 0x72,
	0x57, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x5f, 0x64,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x70, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x5f, 0x72, 0x6b, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x78, 0x70, 0x52, 0x6b, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x11, 0x65, 0x78, 0x70, 0x5f, 0x70, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x50, 0x6f, 0x75,
	0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x72, 0x63, 0x68, 0x22, 0x5d, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x26, 0x0a, 0x04, 0x76,
	0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x56, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x76,
	0x6f, 0x6c, 0x73, 0x22, 0x4d, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xf0, 0x03, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x32, 0x0a,
	0x07, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x5a, 0x6f, 0x6e, 0x65, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x5f, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x17,
	0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x7a,
	0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78,
	0x70, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x65,
	0x78, 0x70, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x42, 0x6f, 0x78, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x12,
	0x3d, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x70, 0x63, 0x5f, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x56, 0x70, 0x63, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x56, 0x70, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3f,
	0x0a, 0x10, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d,
	0x61, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x52,
	0x0e, 0x7a, 0x6f, 0x6e, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x22,
	0xad, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x05,
	0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x05, 0x63, 0x65, 0x6c,
	0x6c, 0x73, 0x12, 0x26, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x61,
	0x6e, 0x5f, 0x61, 0x70, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x61, 0x6e,
	0x41, 0x70, 0x69, 0x12, 0x3d, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x70,
	0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x56, 0x70, 0x63, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x70, 0x63, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x56, 0x70, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x2c, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22,
	0xca, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2c,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x89, 0x02, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x5f,
	0x63, 0x61, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x70, 0x75, 0x43, 0x61,
	0x70, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x70, 0x75, 0x55, 0x73, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x43, 0x61, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x6f,
	0x73, 0x74, 0x49, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x5f, 0x63, 0x61, 0x70, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x43, 0x61, 0x70, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x6f, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x22, 0x6d, 0x0a, 0x0d, 0x5a, 0x6f, 0x6e, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x5a, 0x6f,
	0x6e, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x5a, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x5a, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x15, 0x5a,
	0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x22,
	0x6f, 0x0a, 0x13, 0x5a, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x7a, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x22, 0x41, 0x0a, 0x16, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d,
	0x61, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65,
	0x70, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x70,
	0x43, 0x61, 0x70, 0x22, 0xf9, 0x01, 0x0a, 0x0e, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0e, 0x76, 0x70, 0x63, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x76, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x11, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x4d, 0x61, 0x70, 0x2e, 0x56, 0x70, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x76, 0x70, 0x63, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x42, 0x0a, 0x14, 0x56,
	0x70, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x22, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x32, 0x40, 0x0a, 0x0d, 0x41, 0x70, 0x69, 0x48, 0x6f, 0x73, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e,
	0x12, 0x11, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74,
	0x4e, 0x65, 0x77, 0x1a, 0x0e, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x22, 0x00, 0x32, 0x92, 0x01, 0x0a, 0x0d, 0x41, 0x70, 0x69, 0x5a, 0x6f, 0x6e,
	0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f,
	0x6e, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f, 0x6e, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x0e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x0e, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f,
	0x3b, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cluster_proto_rawDescOnce sync.Once
	file_cluster_proto_rawDescData = file_cluster_proto_rawDesc
)

func file_cluster_proto_rawDescGZIP() []byte {
	file_cluster_proto_rawDescOnce.Do(func() {
		file_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_cluster_proto_rawDescData)
	})
	return file_cluster_proto_rawDescData
}

var file_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_cluster_proto_goTypes = []interface{}{
	(*ResVolValue)(nil),                   // 0: inapi.ResVolValue
	(*ResVolBound)(nil),                   // 1: inapi.ResVolBound
	(*ResImageService)(nil),               // 2: inapi.ResImageService
	(*ResHostOperate)(nil),                // 3: inapi.ResHostOperate
	(*ResHostCloudProvider)(nil),          // 4: inapi.ResHostCloudProvider
	(*ResHost)(nil),                       // 5: inapi.ResHost
	(*ResHostNew)(nil),                    // 6: inapi.ResHostNew
	(*ResHostCloudProviderSyncEntry)(nil), // 7: inapi.ResHostCloudProviderSyncEntry
	(*ResHostList)(nil),                   // 8: inapi.ResHostList
	(*ResHostSpec)(nil),                   // 9: inapi.ResHostSpec
	(*ResPlatform)(nil),                   // 10: inapi.ResPlatform
	(*ResHostResource)(nil),               // 11: inapi.ResHostResource
	(*ResHostVolume)(nil),                 // 12: inapi.ResHostVolume
	(*ResHostStatus)(nil),                 // 13: inapi.ResHostStatus
	(*ResHostBound)(nil),                  // 14: inapi.ResHostBound
	(*ResZone)(nil),                       // 15: inapi.ResZone
	(*ResCell)(nil),                       // 16: inapi.ResCell
	(*ResCellStatus)(nil),                 // 17: inapi.ResCellStatus
	(*ZoneGroupSpec)(nil),                 // 18: inapi.ZoneGroupSpec
	(*ResZoneMasterNode)(nil),             // 19: inapi.ResZoneMasterNode
	(*ResZoneMasterList)(nil),             // 20: inapi.ResZoneMasterList
	(*ZoneHostConfigRequest)(nil),         // 21: inapi.ZoneHostConfigRequest
	(*ZoneHostConfigReply)(nil),           // 22: inapi.ZoneHostConfigReply
	(*ZoneNetworkMapInstance)(nil),        // 23: inapi.ZoneNetworkMapInstance
	(*ZoneNetworkMap)(nil),                // 24: inapi.ZoneNetworkMap
	(*ServiceReply)(nil),                  // 25: inapi.ServiceReply
	nil,                                   // 26: inapi.ZoneNetworkMap.VpcInstanceDataEntry
	(*ObjectMeta)(nil),                    // 27: inapi.ObjectMeta
	(*PbPodRepStatus)(nil),                // 28: inapi.PbPodRepStatus
	(*PbStatsSampleFeed)(nil),             // 29: inapi.PbStatsSampleFeed
	(*Label)(nil),                         // 30: inapi.Label
	(*ConfigInstance)(nil),                // 31: inapi.ConfigInstance
}
var file_cluster_proto_depIdxs = []int32{
	0,  // 0: inapi.ResHostOperate.vol_used:type_name -> inapi.ResVolValue
	27, // 1: inapi.ResHost.meta:type_name -> inapi.ObjectMeta
	3,  // 2: inapi.ResHost.operate:type_name -> inapi.ResHostOperate
	9,  // 3: inapi.ResHost.spec:type_name -> inapi.ResHostSpec
	13, // 4: inapi.ResHost.status:type_name -> inapi.ResHostStatus
	28, // 5: inapi.ResHost.prs:type_name -> inapi.PbPodRepStatus
	4,  // 6: inapi.ResHost.cloud_provider:type_name -> inapi.ResHostCloudProvider
	4,  // 7: inapi.ResHostCloudProviderSyncEntry.cloud_provider:type_name -> inapi.ResHostCloudProvider
	5,  // 8: inapi.ResHostList.items:type_name -> inapi.ResHost
	10, // 9: inapi.ResHostSpec.platform:type_name -> inapi.ResPlatform
	11, // 10: inapi.ResHostSpec.capacity:type_name -> inapi.ResHostResource
	0,  // 11: inapi.ResHostResource.vols:type_name -> inapi.ResVolValue
	12, // 12: inapi.ResHostStatus.volumes:type_name -> inapi.ResHostVolume
	29, // 13: inapi.ResHostStatus.stats:type_name -> inapi.PbStatsSampleFeed
	20, // 14: inapi.ResHostBound.masters:type_name -> inapi.ResZoneMasterList
	2,  // 15: inapi.ResHostBound.image_services:type_name -> inapi.ResImageService
	24, // 16: inapi.ResHostBound.zone_network_map:type_name -> inapi.ZoneNetworkMap
	27, // 17: inapi.ResZone.meta:type_name -> inapi.ObjectMeta
	16, // 18: inapi.ResZone.cells:type_name -> inapi.ResCell
	30, // 19: inapi.ResZone.options:type_name -> inapi.Label
	2,  // 20: inapi.ResZone.image_services:type_name -> inapi.ResImageService
	31, // 21: inapi.ResZone.driver:type_name -> inapi.ConfigInstance
	18, // 22: inapi.ResZone.groups:type_name -> inapi.ZoneGroupSpec
	27, // 23: inapi.ResCell.meta:type_name -> inapi.ObjectMeta
	17, // 24: inapi.ResCell.status:type_name -> inapi.ResCellStatus
	19, // 25: inapi.ResZoneMasterList.items:type_name -> inapi.ResZoneMasterNode
	26, // 26: inapi.ZoneNetworkMap.vpc_instance_data:type_name -> inapi.ZoneNetworkMap.VpcInstanceDataEntry
	6,  // 27: inapi.ApiHostMember.HostJoin:input_type -> inapi.ResHostNew
	21, // 28: inapi.ApiZoneMaster.HostConfig:input_type -> inapi.ZoneHostConfigRequest
	5,  // 29: inapi.ApiZoneMaster.HostStatusSync:input_type -> inapi.ResHost
	5,  // 30: inapi.ApiHostMember.HostJoin:output_type -> inapi.ResHost
	22, // 31: inapi.ApiZoneMaster.HostConfig:output_type -> inapi.ZoneHostConfigReply
	14, // 32: inapi.ApiZoneMaster.HostStatusSync:output_type -> inapi.ResHostBound
	30, // [30:33] is the sub-list for method output_type
	27, // [27:30] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_cluster_proto_init() }
func file_cluster_proto_init() {
	if File_cluster_proto != nil {
		return
	}
	file_inapi_proto_init()
	file_config_proto_init()
	file_pod_proto_init()
	file_stats_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResVolValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResVolBound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResImageService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHostOperate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHostCloudProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHostNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHostCloudProviderSyncEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHostList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHostSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResPlatform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHostResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHostVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHostStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHostBound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCellStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneGroupSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResZoneMasterNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResZoneMasterList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneHostConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneHostConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneNetworkMapInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneNetworkMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cluster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_cluster_proto_goTypes,
		DependencyIndexes: file_cluster_proto_depIdxs,
		MessageInfos:      file_cluster_proto_msgTypes,
	}.Build()
	File_cluster_proto = out.File
	file_cluster_proto_rawDesc = nil
	file_cluster_proto_goTypes = nil
	file_cluster_proto_depIdxs = nil
}
